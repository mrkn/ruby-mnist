require "spec_helper"
require 'benchmark'
require 'json'

RSpec.describe Mnist do
  context ".read_data_sets" do
    it "downloads mnist data sets when files are not yet there in path" do
      minst = Mnist.read_data_sets('spec/fixtures/data')
      images, labels = minst.train.next_batch(1)
      expect(labels.first).to eq(5)
      expect(images.first.size).to eq(784)
      expect(images.first).to eq

      expect(minst.train.images.size).to eq(60000)
      expect(minst.train.labels.size).to eq(60000)
      expect(minst.test.images.size).to eq(10000)
      expect(minst.test.labels.size).to eq(10000)
    end
  end
end